let playback = 
        spawn system "Playback"
        <| fun parentMailbox ->
            let child = 
                spawn parentMailbox "child" 
                    <| fun childMailbox ->
                        childMailbox.Defer (fun () -> printfn "Child stopping")
                        printfn "Child started"
                        let rec childLoop() = actor {
                            let! msg = childMailbox.Receive()
                            return! childLoop()
                        }
                        childLoop()
            cprintfn ConsoleColor.Gray "Creating parent actor..."
            // define parent behavior
            let rec loop() = actor {
                let! msg = parentMailbox.Receive()
                child.Forward(msg)  // forward all messages through
                return! loop ()
            }
            loop ()